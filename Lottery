
//SPDX-Lisence-Identifier :

pragma solidity >=0.5.0 <0.9.0;

contract Lottery {

    address public manager;
    address payable[] public participants;

    constructor() public{
        manager = msg.sender; // Global variable
        
    }

    receive() external payable {
        require(msg.value == 0.5 ether, "Minimum amount for lottery is 1 ether");
        participants.push(payable(msg.sender));
    }

    function getBalance() public view returns(uint) {
        require(msg.sender == manager, "Only manager can call this function");
        return address(this).balance;
    }
    function random() public view returns(uint) {
        return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp, participants.length)));
    }

    function selectWinner() public {
        require(msg.sender == manager, "Only manager can run this function");
        require(participants.length >= 3, "participants must be three");
        uint r = random();
        address payable winner;
        uint index = r % participants.length;
        winner = participants[index];
        winner.transfer(getBalance());
        participants = new address payable[](0);
    }

}
